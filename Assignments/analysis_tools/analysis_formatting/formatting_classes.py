#!/usr/bin/python3

from typing import List, Dict, Optional

BIN_NAME = "binary_name"
SHA_HASH = "sha256"
IMPHASH = "imphash"
ARCH = "arch"
COMP_TIME = "compile_time"
STRS = "strings"
IMPORTS = "imports"
IOCS = "iocs"
MITRE_ATTACK = "mitre_att&ck"
MALWARE_VERDICT = "verdict"
MALWARE_CLASS = "classification"
VERDICT_NOTE = "verdict_justification"

class IOC_types:
    
    @property
    def sha256(self) -> str:
        return "sha256"
    
    @property
    def imphash(self) -> str:
        return "imphash"

    @property
    def domain(self) -> str:
        return "domain"

    @property
    def URL(self) -> str:
        return "URL"

    @property
    def IP(self) -> str:
        return "IP"

    @property
    def file_name(self) -> str:
        return "file_name"

    @property
    def scheduled_task(self) -> str:
        return "scheduled_task"

    @property
    def run_key(self) -> str:
        return "run_key"

    @property
    def DLL(self) -> str:
        return "DLL"

    @property
    def DLL_exported_function(self) -> str:
        return "DLL_exported_function"

    @property
    def PE_string(self) -> str:
        return "PE_string"

    @property
    def mutex(self) -> str:
        return "mutex"

    @property
    def named_pipe(self) -> str:
        return "named_pipe"

class IOC:
    
    def __init__(self, ioc_type: str,
                 ioc_val: str, 
                 ioc_notes: Optional[str] = None) -> None:
        self.type = ioc_type
        self.value = ioc_val
        self.notes = ioc_notes
    
    
    
    

class BinAnalysis:
    
    def __init__(self, bin_name: str) -> None:
        self.fname = bin_name
        self.iocs = []
        self.mitre_map = {}
    
    def set_sha256(self, sha: str):
        self.sha256 = sha 
    
    def set_imphash(self, hash: str):
        self.imphash = hash
        
    def set_arch(self, arch: int):
        self.arch = arch
    
    def set_comp_time(self, t: int):
        self.comp_time = t
    
    def set_sus_strings(self, str_list: List[str]):
        self.strs = str_list
    
    def set_sus_imports(self, import_list: Dict[str, List[str]]):
        self.imports = import_list
        
    def add_ioc(self):
        # TODO
        pass
    
    def add_mitre_tatic():
        # TODO 
        pass

    def set_verdict(self, is_malware: bool):
        self.is_malware = is_malware
    
    def set_verdict_rationale(self, note: str):
        self.note = note
    
    def set_malware_type(self):
        # TODO
        pass
    
    def json_ready(self) -> dict:
        assert(self.fname is not None)
        assert(self.sha256 is not None)
        assert(self.imphash is not None)
        assert(self.arch is not None)
        assert(self.comp_time is not None)
        assert(self.strs is not None)
        assert(self.imports is not None)
        assert(self.is_malware is not None)
        # TODO
        
        bin_analysis = {
            BIN_NAME: self.fname,
            SHA_HASH: self.sha256,
            IMPHASH: self.imphash,
            ARCH: self.arch,
            COMP_TIME: self.comp_time,
            
        }
    
    